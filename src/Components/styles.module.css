
.container {

  padding-inline-start: unset !important;
  /*  DEBUG*/
  /*background-color: azure;*/
}

.container.responsive {
  width: 100%;
  height: 100%;
}

.container {
  font-family: "Helvetica Neue", "Helvetica", "Roboto", sans-serif;
  font-size: 0.875rem;
}

.container.horizontal {
  display: flex;
}

.node {
  /*width: 22px;*/
  /*height: 22px;*/

}


.node {

}

:not(.hidden) > .node:not(.empty) {
  /*min-width: 24px;*/
  /*min-height: 24px;*/
  /*min-height: 0px;*/
  /*max-height: 0px;*/
  /*height: 0px;*/

  /*padding-bottom: 100%;*/

}

.node.border {
  border: 1px solid grey;
  background-color: white;
}

.node.round {
  border-radius: 50%;
  position: relative; /* If you want text inside of it */
}

.node.round:not(.empty) {
  padding: 5px;
}

/*.horizontal .node.round {*/
/*  height: 100%;*/
/*}*/

/*.vertical .node.round {*/
/*  width: 100%;*/
/*}*/

.node.stretch.round {
  border-radius: 50%/100% !important;
}

.node.empty {
  display: inline-block;
  padding: 3px;
  /*height: 9px;*/
  z-index: 5;
  transform: scale(1.15);
}

.hidden > .node {
  height: 0px;
  width: 0px;
  /*min-height: 0px;*/
}


.vertical .node.stretch {

  height: auto;

  padding-top: 4px;
  padding-bottom: 4px;
}

.horizontal .node.stretch {

  padding-right: 4px;
  padding-left: 4px;
  width: auto;
}

.nodeContainer {
  display: flex;
  align-items: center;
}

.vertical .nodeContainer {
  height: 100%;
}


.placeHolder {
  display: flex;
  flex: 1;
  content: "";
  /*background-color: lightblue;*/
}

.vertical .placeHolder.left * {

  text-align: right;
}

.vertical .placeHolder.right * {
  text-align: left;
}

.vertical .nodeContainer {

  flex-direction: column;
}


.vertical.dashed :not(.hidden) > .connector {
  margin-top: 10px;
  margin-bottom: 10px;
}

.vertical.dashed .hidden > .connector:first-child {
  margin-top: 10px;
}

.vertical.dashed .hidden > .connector:last-child {
  margin-bottom: 10px;
}


.horizontal.dashed :not(.hidden) > .connector {
  margin-left: 10px;
  margin-right: 10px;
}

.horizontal.dashed .hidden > .connector:first-child {
  margin-left: 10px;
}

.horizontal.dashed .hidden > .connector:last-child {
  margin-right: 10px;
}

.connector {
  /*flex-grow: 1;*/
  height: 100%;
  width: 100%;
  min-width: 50px;
  display: flex;
  justify-content: center;
}

.connector > div {
  /*position: relative;*/
  /*background-color: rebeccapurple;*/
  background-color: rgb(163 177 183);
}

.vertical .connector > div {
  left: 9px;
  width: 3px;
  min-height: 25px;

  height: 100%;
}


.horizontal .connector > div {

  /*top: 9px;*/
  /*min-width: 50px;*/
  width: 100%;
  height: 3px;
}


.itemContainer {
  display: flex;
  flex-grow: 1;
}

/*.responsive .itemContainer{*/
/*  flex-grow: 1;*/
/*}*/

.horizontal .itemContainer {
  flex-direction: column;
}

.itemContent {
  flex-shrink: 3;
  /*flex: 1;*/

  display: flex;
  flex-direction: column;
  /*justify-content: center;*/
}

.itemContent .timeStamp {
  color: rgb(48, 62, 73);
}

.itemContent .title {

}

.itemContent .title > .defaultHeader {
  margin-bottom: 2px;
  margin-top: 2px;

  font-size: 1.1em;
  white-space: nowrap;
  font-weight: bold;
}

.itemContent .content {
  margin-bottom: 1rem;
  margin-top: 0.25rem;
}

/* TODO HACK REMOVE*/
@media (prefers-color-scheme: dark) {
  :global(.allowDarkMode) .itemContent .timeStamp {
    color: rgba(255, 255, 255, 0.7)
  }

  :global(.allowDarkMode) .itemContent .title > .defaultHeader {
    color: rgb(255, 255, 255);
  }

  :global(.allowDarkMode) .itemContent .content {
    color: rgb(255, 255, 255);
  }
}


.vertical .itemContent .timeStamp {
  margin-bottom: 3px;
}

.horizontal .placeHolder.left * {
  justify-content: flex-end;
}

.vertical .placeHolder {


  flex-direction: row;

  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.2rem;
  padding-bottom: 0.2rem;
}

.placeHolder.left {
  justify-content: flex-end;
}


.horizontal .placeHolder {

  flex-direction: column;

  padding-left: 0.2rem;
  padding-right: 0.2rem;
  padding-top: 0.4rem;
  padding-bottom: 0.4rem;
}

:not(.horizontal) .placeHolder {

  /*TODO this is bad should be same size and ItemNode instead */
  min-height: 50px;
}

.placeHolder.hidden {

}

.round .nodeChildrenContainer {
  height: 4px;
}

.round.stretch .nodeChildrenContainer {
  min-width: 8px;
}

.round:not(.stretch) .nodeChildrenContainer {
  aspect-ratio: 1/1;

  user-select: none;
}

.vertical .round .nodeChildrenContainer {
  width: 100%;
}

.horizontal .round .nodeChildrenContainer {
  height: 100%;
}

.round:not(.stretch).border {
  aspect-ratio: 1/1;
}

.nodeChildrenContainer > i {
  text-align: center;
  margin: auto !important;
}

.nodeChildrenContainer {
  display: flex;
  justify-content: space-around;
  align-items: center;
  text-align: center;
}

